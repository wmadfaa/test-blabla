{"version":3,"file":"binance.js","sourceRoot":"","sources":["../../../src/service/provider/binance.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,OAAO,EAAQ,QAAQ,EAAiC,MAAM,UAAU,CAAC;AACzE,OAAO,EAAE,aAAa,EAAE,oBAAoB,EAAE,MAAM,qBAAqB,CAAC;AAC1E,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AAEtD,MAAM,eAAe,GAAG,CAAC,IAAS,EAAE,EAAE;IACpC,IAAI,IAAI,CAAC,CAAC,KAAK,YAAY;QAAE,OAAO;IACpC,MAAM,MAAM,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC5E,IAAI,CAAC,MAAM,EAAE;QACX,MAAM,IAAI,KAAK,CAAC,gBAAgB,MAAM,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;KACtD;IACD,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC;IACxC,MAAM,KAAK,GAAiB;QAC1B,QAAQ,EAAE,QAAQ,CAAC,OAAO;QAC1B,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,CAAC;QACR,IAAI,EAAE,CAAC;QACP,GAAG,EAAE,CAAC;QACN,IAAI,EAAE,CAAC;QACP,MAAM,EAAE,CAAC;QACT,SAAS,EAAE,CAAC;QACZ,OAAO,EAAE,CAAC;QACV,WAAW,EAAE,CAAC;KACf,CAAC;IACF,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC;AAC7C,CAAC,CAAC;AAEF,MAAM,OAAO,cAAe,SAAQ,gBAAgB;IAIlD;QACE,aAAa;QACb,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;QAJnC,QAAG,GAA6B,EAAE,CAAC;QAOpC,cAAS,GAAG,KAAK,EAAE,IAAU,EAAE,EAAE;YACtC,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;gBAChC,qDAAqD;gBACrD,OAAO;aACR;YACD,IAAI,EAAE,GAAG,CAAC,CAAC;YACX,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;gBAChC,aAAa;gBACb,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACzB;YACD,yBAAyB;YACzB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YACpB,MAAM,IAAI,GAAG;gBACX,MAAM,EAAE,WAAW;gBACnB,MAAM,EAAE,CAAC,GAAG,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC;gBAC3D,EAAE;aACH,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC;QAEK,gBAAW,GAAG,CAAC,IAAU,EAAE,EAAE;YAClC,MAAM,IAAI,GAAG;gBACX,MAAM,EAAE,aAAa;gBACrB,MAAM,EAAE,CAAC,GAAG,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC;gBAC3D,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;aACnB,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC;IA9BF,CAAC;CA+BF","sourcesContent":["/* eslint-disable import/extensions */\nimport { Pair, Exchange, IPriceTicker, ExchangeService } from \"../types\";\nimport { getPairSymbol, getEventNameOpposite } from \"../utils/mapping.js\";\nimport { AbstractProvider } from \"./AbstractProvider\";\n\nconst parseTickerData = (data: any) => {\n  if (data.e !== \"24hrTicker\") return;\n  const myPair = getEventNameOpposite(data.s.toLowerCase(), Exchange.BINANCE);\n  if (!myPair) {\n    throw new Error(`invalid pair ${myPair}, ${data.s}`);\n  }\n  const { c, o, l, h, v, E, p, P } = data;\n  const event: IPriceTicker = {\n    exchange: Exchange.BINANCE,\n    pair: myPair,\n    close: c,\n    open: o,\n    low: l,\n    high: h,\n    volume: v,\n    timestamp: E,\n    percent: p,\n    percent_abs: P,\n  };\n  return { pair: myPair, tickerData: event };\n};\n\nexport class BinanceService extends AbstractProvider\n  implements ExchangeService {\n  private ids: { [P in Pair]?: number } = {};\n\n  constructor() {\n    // @ts-ignore\n    super(Exchange.BINANCE, parseTickerData);\n  }\n\n  public subscribe = async (pair: Pair) => {\n    if (this.ids[pair] !== undefined) {\n      //('pair already subscribed', Exchange.BINANCE, pair)\n      return;\n    }\n    let id = 0;\n    if (this.ids[pair] !== undefined) {\n      // @ts-ignore\n      id = this.ids[pair] + 1;\n    }\n    //('subscribe', pair, id)\n    this.ids[pair] = id;\n    const data = {\n      method: \"SUBSCRIBE\",\n      params: [`${getPairSymbol(pair, Exchange.BINANCE)}@ticker`],\n      id,\n    };\n    this.send(data);\n  };\n\n  public unsubscribe = (pair: Pair) => {\n    const data = {\n      method: \"UNSUBSCRIBE\",\n      params: [`${getPairSymbol(pair, Exchange.BINANCE)}@ticker`],\n      id: this.ids[pair],\n    };\n    this.send(data);\n    delete this.ids[pair];\n  };\n}\n"]}